{"version":3,"sources":["../../projects/ngx-rest-model/src/lib/constants.ts","../projects/ngx-rest-model/src/lib/http/api.service.ts","../../../node_modules/tslib/tslib.es6.js","../projects/ngx-rest-model/src/lib/models/models.ts","../projects/ngx-rest-model/src/lib/models/base-model.ts","../projects/ngx-rest-model/src/lib/models/relationship.ts","../projects/ngx-rest-model/src/lib/models/model.factory.ts","../projects/ngx-rest-model/src/lib/http/backend.service.ts","../../projects/ngx-rest-model/src/lib/ngx-rest-model.module.ts"],"names":["CONFIG","InjectionToken","ApiService","http","config","this","root","api_root","setBaseUrl","setApiRoot","prototype","url","baseUrl","getBaseUrl","apiRoot","getApiRoot","getUrl","uri","bypassPrefix","get","options","pipe","take","post","payload","put","delete","Injectable","HttpClient","Inject","args","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Models","add","model","modelName","constructor","name","toLowerCase","models","BaseModel","modelConfig","key","hidden","relationships","setConfig","assign","getConfig","getUri","getSelfUri","setUri","getKey","getRelationship","deserialize","input","prop","hasOwnProperty","indexOf","snakeToCamel","push","data","relationships_1","relationships_1_1","relationship","relationshipConfig","related","relationshipObject","Relationship","type","ModelFactory","makeRelatedFromRelationship","string","replace","toUpperCase","setRelated","getRelated","setModel","getModel","make","makeFromArray","array","ii","makeRelated","BackendService","api","find","id","_this","map","client","save","update","createNew","serialize","destroy","page","requestOptions","params","HttpParams","set","String","response","NgxRestModelModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import {InjectionToken} from \"@angular/core\";\n\nexport const CONFIG = new InjectionToken('config');\n","import {Inject, Injectable} from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from \"rxjs/operators\";\nimport { CONFIG } from '../constants';\n\n@Injectable()\nexport class ApiService {\n\n    private baseUrl: string;\n    private apiRoot: string;\n    private http: HttpClient;\n\n    constructor(http: HttpClient, @Inject(CONFIG) config) {\n        this.http = http;\n        const root = config.api_root;\n\n        this.setBaseUrl(root);\n        this.setApiRoot(root);\n    }\n\n    public setBaseUrl(url: string): void {\n        this.baseUrl = url;\n    }\n\n    public getBaseUrl() {\n        return this.baseUrl;\n    }\n\n    public setApiRoot(url: string): void {\n        this.apiRoot = url;\n    }\n\n    public getApiRoot() {\n        return this.apiRoot;\n    }\n\n    private getUrl(uri, bypassPrefix = false) {\n        if( ! bypassPrefix) {\n            return this.getBaseUrl() + '/' + uri;\n        }\n\n        return this.getApiRoot() + '/' + uri;\n    }\n\n    public get(uri, options = {}, bypassPrefix = false): any {\n        let url = this.getUrl(uri, bypassPrefix);\n        if(options != {}) {\n            return this.http.get(url, options).pipe(take(1));\n        }\n\n        return this.http.get(url).pipe(take(1));\n    }\n\n    public post(uri, payload, bypassPrefix = false, options = {}): any {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        if(options != {}) {\n            return this.http.post(url, payload, options).pipe(take(1));\n        }\n\n        return this.http.post(url, payload).pipe(take(1));\n    }\n\n    public put(uri, payload, bypassPrefix = false) {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        return this.http.put(url, payload).pipe(take(1));\n    }\n\n    public delete(uri, options = {}, bypassPrefix = false) {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        return this.http.delete(url).pipe(take(1));\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class Models {\n\n    static models = {};\n\n    static add(model) {\n        let modelName = new model().constructor.name.toLowerCase();\n        if(!Models.models[modelName]) {\n            Models.models[modelName] = model;\n        }\n    }\n\n    static get(model) {\n        return Models.models[model];\n    }\n}","import { ModelFactory } from './model.factory';\nimport { Relationship } from './relationship';\nimport { Serializable } from './serializable.interface';\nimport { Model } from './model.interface';\n\nimport { Models } from './models';\n\nexport class BaseModel implements Model, Serializable {\n\n\n     public modelConfig = {\n         key: '',\n         uri: '',\n         hidden: [],\n         relationships: {}\n    };\n\n    constructor() {}\n\n    setConfig(config) {\n        this.modelConfig = {...this.getConfig(), ...config};\n    }\n\n    getConfig() {\n        return this.modelConfig;\n    }\n\n    getUri() {\n        return this.modelConfig.uri;\n    }\n\n    getSelfUri() {\n        return this.modelConfig.uri + '/' + this[this.modelConfig.key];\n    }\n\n    setUri(uri) {\n        this.modelConfig.uri = uri;\n    }\n\n    getKey() {\n        return this.modelConfig.key;\n    }\n\n    getRelationship(key) {\n        return this.modelConfig.relationships[key];\n    }\n\n    deserialize(input) {\n\n        let config = this.getConfig();\n        let relationships = [];\n        for(let prop in input) {\n            if(! input.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            if(config.hidden.indexOf(prop) > -1) {\n                continue;\n            }\n\n            if(typeof input[prop] === 'object') {\n\n                if(config.relationships.hasOwnProperty(this.snakeToCamel(prop))) {\n                    relationships.push({\n                        key: this.snakeToCamel(prop),\n                        value: (input[prop] ? input[prop].data : null)\n                    });\n                }\n\n                continue;\n            }\n\n            this[this.snakeToCamel(prop)] = input[prop];\n        }\n\n        for(let relationship of relationships) {\n\n            if(relationship.value === null) {\n                continue;\n            }\n\n            let relationshipConfig = config.relationships[relationship.key];\n\n            let related = Models.get(relationshipConfig.model);\n\n            let relationshipObject = new Relationship(this, related, relationshipConfig.type);\n\n            this[relationship.key] = ModelFactory.makeRelatedFromRelationship(relationshipObject, relationship.value);\n        }\n\n        return this;\n    }\n\n    snakeToCamel(string) {\n        return string.replace(/_\\w/g, function(m) {\n            return m[1].toUpperCase();\n        });\n    }\n}\n","import { BaseModel } from './base-model';\n\nexport class Relationship {\n\n    constructor(protected model, protected related, protected type) {}\n\n    setRelated(related) {\n        this.related = related;\n    }\n\n    getRelated() {\n        return this.related;\n    }\n\n    setModel(model) {\n        this.model = model;\n    }\n\n    create() {\n        // if the related model isn't instantiated,\n        // instantiate it here\n        if( ! (this.related instanceof BaseModel)) {\n            this.related = new this.related();\n        }\n\n        if(this.type == 'hasMany' || this.type == 'hasOne') {\n            this.related.setUri(this.model.getSelfUri() + '/' + this.related.getUri());\n            return this.related;\n        }\n\n        if(this.type == 'belongsTo') {\n            return this.related;\n        }\n    }\n\n    getModel() {\n\n    }\n\n    getUri() {\n\n    }\n}","import { Relationship } from './relationship';\nimport { Models } from \"./models\";\n\nexport class ModelFactory {\n\n    static make(model, data) {\n        return new model().deserialize(data);\n    }\n\n    static makeFromArray(model, array) {\n        let models = [];\n        for(let ii = 0; ii < array.length; ++ii) {\n            models.push(new model().deserialize(array[ii]));\n        }\n        return models;\n    }\n\n    static makeRelated(model, related, key) {\n        let relationshipConfig = model.getRelationship(key);\n\n        let relationship = new Relationship(model, related, relationshipConfig.type);\n\n        model[key] = relationship.create();\n\n        model.setUri(model[key].getSelfUri() + '/' + model.getUri());\n\n        return model;\n    }\n\n    static makeRelatedFromRelationship(relationship, input) {\n        if(relationship.type == 'hasOne' || relationship.type == 'belongsTo') {\n            return relationship.create().deserialize(input);\n        } else if(relationship.type == 'hasMany') {\n            const related = relationship.getRelated();\n            // let constructor = Models.get(related.key);\n            return ModelFactory.makeFromArray(related, input);\n        }\n\n    }\n\n}","import { Injectable } from '@angular/core';\nimport {HttpParams} from \"@angular/common/http\";\n\nimport { ApiService } from './api.service';\nimport { ModelFactory } from '../models/model.factory';\nimport { Models } from \"../models/models\";\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class BackendService {\n\n\n    protected model;\n\n    constructor(protected api: ApiService) {\n    }\n\n    // set model\n    setModel(model) {\n        this.model = model;\n    }\n\n    find(id) {\n        let constructor = Models.get(this.model.key);\n        return this.api.get(new constructor().getUri() + '/' + id).pipe(map((client: any) => {\n            client.data = ModelFactory.make(Models.get(this.model.key), client.data);\n            return client;\n        }));\n    }\n\n    save(data) {\n        if(data[data.getKey()]) {\n            return this.update(data);\n        }\n        return this.createNew(data);\n    }\n\n    update(data) {\n        let payload = data.serialize();\n        return this.api.put(data.getUri() + '/' + data[data.getKey()], payload);\n    }\n\n    createNew(data) {\n        let payload = data.serialize();\n        return this.api.post(data.getUri(), payload);\n    }\n\n    destroy(data) {\n        return this.api.delete(data.getUri() + '/' + data[data.getKey()]);\n    }\n\n    get(model = null, options: any = { page: 1 }) {\n\n\n        let requestOptions: any = {\n            params: new HttpParams()\n        };\n\n        if(options.page != 1) {\n            requestOptions.params = new HttpParams().set('page', String(options.page));\n        }\n\n        let observable;\n\n        if(model === null) {\n            observable = this.api.get(new this.model().getUri(), requestOptions);\n        } else {\n            observable = this.api.get(model.getUri(), requestOptions);\n        }\n\n        return observable.pipe(\n                map((response: any) => {\n                    let data = response.data;\n                    response.data = ModelFactory.makeFromArray(Models.get(this.model.key), data);\n                    return response;\n                })\n        );\n    }\n\n    getRelated(related, key, model = null, options = {}) {\n        if(model == null) {\n            model = this.model;\n        }\n\n        let constructor = Models.get(model.key);\n        model = ModelFactory.makeRelated(new constructor(), related, key);\n\n        return this.get(model);\n    }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { ApiService } from \"./http/api.service\";\nimport { BackendService } from \"./http/backend.service\";\nimport {CONFIG} from \"./constants\";\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    exports: [],\n    providers:\n    [\n        ApiService,\n        BackendService\n    ]\n})\nexport class NgxRestModelModule {\n    public static forRoot(config): ModuleWithProviders<NgxRestModelModule> {\n        return {\n            ngModule: NgxRestModelModule,\n            providers: [{ provide: CONFIG, useValue: config}]\n        };\n    }\n}\n"]}